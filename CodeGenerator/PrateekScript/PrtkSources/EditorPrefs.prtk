PRATEEK_FILE_INFO(EditorPrefs, cs)
{
    PRATEEK_BLOCK_BASIC_FUNC(Prateek.Editors, Prefs)
    {
		PRATEEK_CLASS_INFO(bool)  { PRATEEK_NAMES(Bools, GetBool, SetBool) }
		PRATEEK_CLASS_INFO(int)   { PRATEEK_NAMES(Ints, GetInt, SetInt) }
		PRATEEK_CLASS_INFO(float) { PRATEEK_NAMES(Floats, GetFloat, SetFloat) }
		PRATEEK_CLASS_INFO(string){ PRATEEK_NAMES(Strings, GetString, SetString) }

        PRATEEK_CODE_MAIN
        {
		@
        @//---------------------------------------------------------------------
        @#region SRC_CLASS
        @public static NAMES_0 Get(string name, SRC_CLASS defaultValue)
        @{
        @    return new NAMES_0(name, defaultValue);
        @}
        @
        @//---------------------------------------------------------------------
        @public class NAMES_0 : TypedStorage<SRC_CLASS>
        @{
        @    //-----------------------------------------------------------------
        @    public NAMES_0(string name, SRC_CLASS defaultValue) : base(name, defaultValue) { }
        @
        @    //-----------------------------------------------------------------
        @    public override bool ShouldSetNewValue(SRC_CLASS newValue)
        @    {
        @        return this.value != newValue;
        @    }
		@	 
        @    //-----------------------------------------------------------------
        @    #if UNITY_EDITOR
        @    protected override void GetFromPrefs()
        @    {
        @        value = UnityEditor.EditorPrefs.NAMES_1(name, defaultValue);
        @    }
        @
        @    //-----------------------------------------------------------------
        @    protected override void SetToPrefs()
        @    {
        @        UnityEditor.EditorPrefs.NAMES_2(name, value);
        @    }
        @    #endif //UNITY_EDITOR
        @}
        @#endregion SRC_CLASS
        }
    }

	PRATEEK_BLOCK_BASIC_FUNC(Prateek.Editors, Prefs)
	{
		PRATEEK_CLASS_INFO(Vector2)
		{
			PRATEEK_NAMES(Vector2s, Floats)
			PRATEEK_VARS(x, y)
		}
		PRATEEK_CLASS_INFO(Vector3)
		{
			PRATEEK_NAMES(Vector3s, Floats)
			PRATEEK_VARS(x, y, z)
		}
		PRATEEK_CLASS_INFO(Vector4)
		{
			PRATEEK_NAMES(Vector4s, Floats)
			PRATEEK_VARS(x, y, z, w)
		}
		PRATEEK_CLASS_INFO(Rect)
		{
			PRATEEK_NAMES(Rects, Floats)
			PRATEEK_VARS(x, y, width, height)
		}

		PRATEEK_FUNC
		{
		@	protected NAMES_1 VARS_0;
		}
		PRATEEK_FUNC { @VARS_0.Value$ }
		PRATEEK_FUNC
		{
		@			VARS_0.Value = value.VARS_0;
		}
		PRATEEK_FUNC
		{
		@		VARS_0 = new NAMES_1(name + ".VARS_0", defaultValue.VARS_0);
		}

		PRATEEK_CODE_MAIN
		{
		@
		@//---------------------------------------------------------------------
		@#region SRC_CLASS
		@public static NAMES_0 Get(string name, SRC_CLASS defaultValue)
		@{
		@	return new NAMES_0(name, defaultValue);
		@}
		@
		@//---------------------------------------------------------------------
		@public class NAMES_0 : ValueStorage
		@{
		@	//-----------------------------------------------------------------
		@	#region Fields
		@FUNC_RESULT_0
		@	#endregion Fields
		@
		@	//-----------------------------------------------------------------
		@	#region Properties
		@	public SRC_CLASS data
		@	{
		@		get
		@		{
		@			return new SRC_CLASS(FUNC_RESULT_1);
		@		}
		@		set
		@		{
		@FUNC_RESULT_2
		@		}
		@	}
		@	#endregion Properties
		@
		@	//-----------------------------------------------------------------
		@	#region Behaviour
		@	public NAMES_0(string name, SRC_CLASS defaultValue) : base(name)
		@	{
		@FUNC_RESULT_3
		@	}
		@
		@	//-----------------------------------------------------------------
		@	protected override void GetFromPrefs() { }
		@	protected override void SetToPrefs() { }
		@	#endregion Behaviour
		@}
		@#endregion SRC_CLASS
		}
	}
}
